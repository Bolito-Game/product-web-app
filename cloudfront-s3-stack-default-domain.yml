AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Provisions a secure S3 bucket and a CloudFront distribution to serve a single-page
  application using the default cloudfront.net domain. Uses OAC for S3 access.

Parameters:
  AppName:
    Type: String
    Description: "A unique name for your application (e.g., outlier-products). Used to name resources."
    Default: "outlier-product-app"

Resources:
  # 1. S3 Bucket for storing the application's static files
  WebAppS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AppName}-webapp-bucket"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  # 2. CloudFront Origin Access Control (OAC)
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub "${AppName}-oac-for-s3"
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # 3. CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub "CDN for ${AppName}"
        Enabled: true
        HttpVersion: http2and3
        DefaultRootObject: index.html
        Origins:
          - Id: !Sub "S3-${AppName}-Origin"
            DomainName: !GetAtt WebAppS3Bucket.RegionalDomainName
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
            # ----------- FIX IS HERE -----------
            # S3OriginConfig IS REQUIRED to identify this as an S3 origin, even when using OAC.
            S3OriginConfig:
              # When using OAC, OriginAccessIdentity must be present but set to an empty string.
              OriginAccessIdentity: ""
            # ----------- END FIX -----------
        DefaultCacheBehavior:
          TargetOriginId: !Sub "S3-${AppName}-Origin"
          ViewerProtocolPolicy: "redirect-to-https"
          Compress: true
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptimized
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html

  # 4. S3 Bucket Policy
  WebAppS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebAppS3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowCloudFrontServicePrincipalGetObject"
            Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${WebAppS3Bucket}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"

Outputs:
  WebAppS3BucketName:
    Description: "Name of the S3 bucket where the web app is deployed"
    Value: !Ref WebAppS3Bucket
  CloudFrontDistributionId:
    Description: "The ID of the CloudFront distribution."
    Value: !Ref CloudFrontDistribution
  CloudFrontDomainName:
    Description: "Domain name of the CloudFront distribution for the web app"
    Value: !GetAtt CloudFrontDistribution.DomainName